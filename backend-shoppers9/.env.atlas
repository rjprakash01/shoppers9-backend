# MongoDB Atlas Configuration for Main Website Backend
# Copy this file to .env and replace the placeholders with your actual values
# This connects to the main_website_db on the same cluster as the admin database

# Main Website Database Connection
MONGODB_URI=mongodb+srv://<username>:<password>@<cluster>.mongodb.net/main_website_db?retryWrites=true&w=majority

# Shoppers9 Database Connection (original main database)
# Primary database for main website backend
SHOPPERS9_DB_URI=mongodb+srv://<username>:<password>@<cluster>.mongodb.net/shoppers9?retryWrites=true&w=majority

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRES_IN=30d

# Server Configuration
PORT=5000
NODE_ENV=development

# CORS Configuration
CORS_ORIGIN=http://localhost:3001

# File Upload Configuration
UPLOAD_PATH=./uploads
MAX_FILE_SIZE=5242880

# Email Configuration
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USER=your-email@gmail.com
EMAIL_PASS=your-app-password
EMAIL_FROM=noreply@shoppers9.com

# Payment Configuration (Stripe)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key
STRIPE_PUBLISHABLE_KEY=pk_test_your_stripe_publishable_key
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

# Redis Configuration (for sessions and caching)
REDIS_URL=redis://localhost:6379

# Session Configuration
SESSION_SECRET=your-session-secret-change-this-in-production

# Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# Logging
LOG_LEVEL=info

# Security
BCRYPT_ROUNDS=12

# Example with actual values (DO NOT USE THESE):
# MONGODB_URI=mongodb+srv://myuser:mypassword@shoppers9-cluster.abc123.mongodb.net/main_website_db?retryWrites=true&w=majority
# SHOPPERS9_DB_URI=mongodb+srv://myuser:mypassword@shoppers9-cluster.abc123.mongodb.net/shoppers9?retryWrites=true&w=majority

# Notes:
# 1. Replace <username>, <password>, and <cluster> with your MongoDB Atlas credentials
# 2. This backend only connects to main_website_db (not admin_db)
# 3. URL encode special characters in passwords
# 4. Keep all secrets secure and unique for each environment
# 5. Update CORS_ORIGIN for production deployment
# 6. Configure payment and email services as needed